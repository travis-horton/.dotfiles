#!/bin/zsh

# Print a full horizontal line of dashes
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -;
echo "----------------------------";
echo "------- NVIM SETUP ---------";
echo "----------------------------";

echo "------------------------------------------------------";
echo "------- MAKE NVIM DIR IN \$HOME/.CONFIG/NVIM ----------";
echo "------------------------------------------------------";
set -x;
mkdir -p ${HOME}/.config/nvim;
set +x;

echo "\n--------------------------------------------------------------";
echo "------- SYMLINK CONFIG INIT.VIM TO DOTFILES INIT.VIM ---------";
echo "--------------------------------------------------------------";
set -x;
ln -vsf ${HOME}/.dotfiles/.config/nvim/init.vim ${HOME}/.config/nvim/init.vim;
set +x;

echo "\n----------------------------------------------------------------------";
echo "------- SYMLINK CONFIG COC-SETTINGS TO DOTFILES COC-SETTINGS ---------";
echo "----------------------------------------------------------------------";
set -x;
ln -vsf ${HOME}/.dotfiles/.config/nvim/coc-settings.json \
  ${HOME}/.config/nvim/coc-settings.json;

PLUGIN_DIR=${HOME}/.config/nvim;
set +x;

echo "\n------------------------------------------------------------------------";
echo "------- CREATE AUTOLOAD, BUNDLE, AND COLOR DIRS IN CONFIG NVIM ---------";
echo "------------------------------------------------------------------------";
set -x;
mkdir -p ${PLUGIN_DIR}/autoload ${PLUGIN_DIR}/bundle ${PLUGIN_DIR}/colors
set +x;

echo "\n--------------------------------------------------";
echo "--------------- INSTALL PATHOGEN -----------------";
echo "--------------------------------------------------";
set -x;
curl -LSso ${PLUGIN_DIR}/autoload/pathogen.vim https://tpo.pe/pathogen.vim;
set +x;

echo "\n---------------------------------";
echo "------- INSTALL PLUGINS ---------";
echo "---------------------------------";
echo "-----------------------------------------------";
echo "------- INSTALL COC FOR AUTO-COMPLETE ---------";
echo "-----------------------------------------------";
set -x;
git clone https://github.com/neoclide/coc.nvim \
  ${PLUGIN_DIR}/bundle/coc.nvim;
set +x;

echo "\n-------------------------------";
echo "------- SETUP FOR COC ---------";
echo "-------------------------------";
echo "------- UPDATE COC ---------";
set -x;
cd ${PLUGIN_DIR}/bundle/coc.nvim;
git pull;
yarn install;
cd ~;
set +x;

echo "\n---------------------------------------------------";
echo "------- INSTALL DEPS FOR COC AUTOCOMPLETE ---------";
echo "------- RUST -------";
set -x;
git clone https://github.com/rust-lang/rust.vim.git \
  ${PLUGIN_DIR}/bundle/rust.vim;
set +x;
echo "------- UPDATE ---------";
set -x;
cd ${PLUGIN_DIR}/bundle/rust.vim;
git pull;
cd ~;
set +x;

echo "\n------- TYPESCRIPT ---------";
set -x;
git clone https://github.com/leafgarland/typescript-vim \
  ${PLUGIN_DIR}/bundle/typescript-vim;
set +x;
echo "------- UPDATE ---------";
set -x;
cd ${PLUGIN_DIR}/bundle/typescript-vim;
git pull;
cd ~;
set +x;

echo "\n------- JAVASCRIPT ---------";
set -x;
git clone https://github.com/pangloss/vim-javascript.git \
  ${PLUGIN_DIR}/bundle/vim-javascript;
set +x;
echo "------- UPDATE ---------";
set -x;
cd ${PLUGIN_DIR}/bundle/vim-javascript;
git pull;
cd ~;
set +x;

echo "\n------- JSX ---------";
set -x;
git clone https://github.com/MaxMEllon/vim-jsx-pretty \
  ${PLUGIN_DIR}/bundle/vim-jsx-pretty;
set +x;
echo "------- UPDATE ---------"
set -x;
cd ${PLUGIN_DIR}/bundle/vim-jsx-pretty;
git pull;
cd ~;
set +x;

echo "\n------- JSX TYPESCRIPT ---------"
set -x;
git clone https://github.com/peitalin/vim-jsx-typescript \
  ${PLUGIN_DIR}/bundle/vim-jsx-typescript;
set +x;
echo "------- UPDATE ---------"
set -x;
cd ${PLUGIN_DIR}/bundle/vim-jsx-typescript;
git pull;
cd ~;
set +x;

echo "\n-----------------------------------";
echo "------- INSTALL TELESCOPE ---------";
echo "--- telescope is a fuzzy finder ---";
echo "-----------------------------------";
set -x;
git clone https://github.com/nvim-telescope/telescope.nvim \
  ${PLUGIN_DIR}/bundle/telescope.nvim;
set +x;

echo "\n----------------------------------";
echo "------- UPDATE TELESCOPE ---------";
echo "----------------------------------";
set -x;
cd ${PLUGIN_DIR}/bundle/telescope.nvim;
git pull;
cd ~;
set +x;

echo "\n------------------------------------------------";
echo "------- INSTALL TELESCOPE REQUIREMENTS ---------";
echo "----------- (plenary and treesitter) -----------";
echo "------------------------------------------------";
set -x;
git clone https://github.com/nvim-lua/plenary.nvim \
  ${PLUGIN_DIR}/bundle/plenary;
git clone https://github.com/nvim-treesitter/nvim-treesitter \
  ${PLUGIN_DIR}/bundle/nvim-treesitter;
set +x;

# fugitive is for git commands in vim
echo "\n----------------------------------";
echo "------- INSTALL FUGITIVE ---------";
echo "----------------------------------";
set -x;
git clone https://github.com/tpope/vim-fugitive \
  ${PLUGIN_DIR}/bundle/vim-fugitive;
set +x;

echo "\n---------------------------------";
echo "------- UPDATE FUGITIVE ---------";
echo "---------------------------------";
set -x;
cd ${PLUGIN_DIR}/bundle/vim-fugitive;
git pull;
cd ~;
set +x;

# undo tree is the bomb -- your undo will have so much more power
echo "\n-----------------------------------";
echo "------- INSTALL UNDO TREE ---------";
echo "-----------------------------------";
set -x;
git clone https://github.com/mbbill/undotree ${PLUGIN_DIR}/bundle/undotree;
set +x;

echo "\n----------------------------------";
echo "------- UPDATE UNDO TREE ---------";
echo "----------------------------------";
set -x;
cd ${PLUGIN_DIR}/bundle/undotree;
git pull;
cd ~;
set +x;

echo "\n-----------------------------------------------------------------------";
echo "------- INSTALL PAPER COLOR (my current preferred color scheme) -------";
echo "-----------------------------------------------------------------------";
set -x;
curl -o ${PLUGIN_DIR}/colors/PaperColor.vim \
  https://raw.githubusercontent.com/NLKNguyen/papercolor-theme/master/colors/PaperColor.vim;
set +x;

echo "\n---------------------------------------";
echo "------- YARN INSTALL IN COC VIM -------";
echo "---------------------------------------";
set -x;
yarn install;
set +x;

echo "\n--------------------------------------------------------------------";
echo "--------------- INSTALL OTHER COC DEPS WITHIN NVIM -----------------";
echo "---------- AND INSTALL HELP TAGS FOR ALL VIM EXTENSIONS ------------";
echo "this might take a minute and there is no status update... be patient";
echo "- coc-html, coc-tsserver, coc-rust-analyzer, coc-pyright, coc-json -";
echo "--------------------------------------------------------------------";
sleep 3;

set -x;
nvim -c "CocInstall -sync coc-html \
  | CocInstall -sync coc-tsserver \
  | CocInstall -sync coc-rust-analyzer \
  | CocInstall -sync coc-pyright \
  | CocInstall -sync coc-json \
  | CocInstall -sync coc-html \
  | CocUpdateSync \
  | helptags ALL \
  | q
";
set +x;
